#!/bin/bash

# cleanup is used to clean up files inside some specified directory(s)

if [ $# -ge 2 ]
then

    # slice out the argument array from the first argument
    # until the second to the last argument
    CLEANUP_PATHS=${@:1:$# - 1}

    # timestamp is specified in the last argument
    TIMESTAMP=${!#}               # or $BASH_ARGV

    # examine validity for each path
    for path in $CLEANUP_PATHS
    do
        # test if path exists
        if [ ! -d ${path} ]; then
            echo "cleanup: directory '${path}' does not exist" 
            exit 1
        fi

        # test if having write permission
        if [ ! -w ${path} ]; then
            echo "cleanup: no permission to write '${path}' directory"
            exit 1
        fi
    done

    # test if TIMESTAMP is an integer
    # -eq is a numerical comparison
    # test emits a lot of error messages if test failed; that's why
    # the messages are being redirected
    if [ ${TIMESTAMP} -eq ${TIMESTAMP} >& /dev/null ]; then
        # remove files in CLEANUP_PATH
        find ${CLEANUP_PATHS} -maxdepth 1 -type f -mtime +${TIMESTAMP} | xargs rm
    else
        echo "cleanup: '${TIMESTAMP}' is not an integer"
        exit 1
    fi
else
    echo "Usage: cleanup [<paths>...] [<timestamp>]"
    echo ""
    echo "[<paths>...] : the absolute paths to the root directory to be cleaned up"
    echo "[<timestamp>]: an integer; files and directories older than <timestamp> will be deleted; unit is in number of days"
    echo ""
    echo "Example: cleanup /home/john/Music 3"
    echo ""
fi
